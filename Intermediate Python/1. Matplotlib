# 1. MATPLOTLIB
# 1-1 HOW TO IMPORT, CREATE LINE PLOT, DISPLAY PLOT
# Print the last item from year and pop
# print(year[-1])
# print(pop[-1])
# result -------> 2100 / 10.85
# 
# Import matplotlib.pyplot as plt
# import matplotlib.pyplot as plt
# 
# Make a line plot: year on the x-axis, pop on the y-axis
# plt.plot(year, pop)
# 
# Display the plot with plt.show()
# plt.show()
#
# 1-2 HOW TO CREATE SCATTER PLOT (Plot for seeing correlation between two variables)
# List gdp_cap and life_exp are provided for this.
# print(gdp_cap[-1])
# print(life_exp[-1])
# 
# Change the line plot below to a scatter plot
# plt.scatter(gdp_cap, life_exp)
# gdp_cap is the horizontal axis and life_exp is the vertical axis.
#
# Put the x-axis on a logarithmic scale
# plt.xscale('log')
# Show plot
# plt.show()
# 
# 1-3 HOW TO CREATE HISTOGRAM (Used for seeing a particular distribution)
# Create histogram of life_exp data
# import matplotlib.pyplot as plt
# plt.hist(life_exp)
# Display histogram
# plt.show()
#
# Build histogram with 5 bins
# plt.hist(life_exp,5)
# Show and clean up plot
# plt.show()
# plt.clf()
# plt.clf<---------- this function cleans up the plot 
#
# Build histogram with 20 bins
# plt.hist(life_exp,20)
# Show and clean up again
# plt.show()
# plt.clf()
# if 5 bin and 20 bin are not cleaned up, the two histograms will be overlapped into one graph for the 20 bin plot
#
# 1-4 CUSTOMIZE PLOT
# Basic scatter plot, log scale
# plt.scatter(gdp_cap, life_exp)
# plt.xscale('log') 
#
# Below will be label names
# xlab = 'GDP per Capita [in USD]'
# ylab = 'Life Expectancy [in years]'
# title = 'World Development in 2007'
# 
# Add axis labels
# plt.xlabel(xlab)
# plt.ylabel(ylab)
# 
# Add title name
# plt.title(title)
# 
# After customizing, display the plot
# plt.show()
#
# 1-5 TICKS
# Scatter plot
# plt.scatter(gdp_cap, life_exp)
#
# Previous customizations
# plt.xscale('log') 
# plt.xlabel('GDP per Capita [in USD]')
# plt.ylabel('Life Expectancy [in years]')
# plt.title('World Development in 2007')
#
# Definition of tick_val and tick_lab
# tick_val = [1000, 10000, 100000]
# tick_lab = ['1k', '10k', '100k']
#
# Adapt the ticks on the x-axis
# plt.xticks(tick_val,tick_lab)
#
# After customizing, display the plot
# plt.show()
#
# 1-6 SIZE
# # Import numpy as np
# import numpy as np
# # Store pop as a numpy array: np_pop
# np_pop = np.array(pop)
# # Double np_pop
# np_pop = np_pop * 2
# # Update: set s argument to np_pop <- s means size
# plt.scatter(gdp_cap, life_exp, s = np_pop)
# # Previous customizations
# plt.xscale('log') 
# plt.xlabel('GDP per Capita [in USD]')
# plt.ylabel('Life Expectancy [in years]')
# plt.title('World Development in 2007')
# plt.xticks([1000, 10000, 100000],['1k', '10k', '100k'])
# # Display the plot
# plt.show()
#
# 1-7 COLORS AND TRANSPARANCY
# # Specify c and alpha inside plt.scatter()
# plt.scatter(x = gdp_cap, y = life_exp, s = np.array(pop) * 2, c = col, alpha = 0.8)
#
# 1-8 Additional Customization
# # Additional customizations
# plt.text(1550, 71, 'India')
# plt.text(5700, 80, 'China') <- This puts text in the scatter plot ball itself
# # Add grid() call
# plt.grid(True) <- This creates Grid Lines
